name: CI/CD for Dotnet App

on:
  push:
    branches: [ main ]

env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  SONAR_HOST_URL: http://65.2.39.233:9000
  PROJECT_KEY: dotnet-webapp

jobs:
  sonar:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install SonarScanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: SonarQube Scan
        run: |
          dotnet sonarscanner begin /k:"$PROJECT_KEY" /d:sonar.host.url="$SONAR_HOST_URL" /d:sonar.login="$SONAR_TOKEN"
          dotnet build
          dotnet sonarscanner end /d:sonar.login="$SONAR_TOKEN"

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: sonar
    steps:
      - uses: actions/checkout@v3

      - name: Build .NET App
        run: dotnet publish -c Release -o out

      - name: Build Docker Image
        run: docker build -t dotnet-webapp-image .

      - name: Copy Docker Image to Remote VM
        uses: appleboy/scp-action@v0.1.7
        with:
          host: 65.2.39.233
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker stop dotnet-webapp || true
            docker rm dotnet-webapp || true
            docker rmi dotnet-webapp-image || true
            docker load < image.tar
            docker run -d -p 80:80 --name dotnet-webapp dotnet-webapp-image

      - name: Save Docker image
        run: docker save dotnet-webapp-image -o image.tar
