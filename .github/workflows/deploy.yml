name: CI/CD: Sonar + Docker + Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-analyze-push:
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
      DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: üîç SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v1.1
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=dharshan_webapp
            -Dsonar.organization=your_org_key
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: üõ†Ô∏è Build Docker Image
        run: docker build -t $DOCKER_HUB_USERNAME/stylishboy:latest .

      - name: üîê Docker Login
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: üöÄ Push Docker Image
        run: docker push $DOCKER_HUB_USERNAME/stylishboy:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-analyze-push

    steps:
      - name: üîë SSH & Deploy to Remote VM
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_SSH_KEY }}
          script: |
            docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_TOKEN }}
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/stylishboy:latest
            docker rm -f stylishboy || true
            docker run -d --name stylishboy -p 80:80 ${{ secrets.DOCKER_HUB_USERNAME }}/stylishboy:latest
