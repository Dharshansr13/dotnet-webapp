stages:
  - build
  - test
  - sonar
  - docker
  - deploy

variables:
  SONAR_HOST_URL: "http://43.205.194.95:9000"
  SONAR_TOKEN: "sqa_844aafb611cebdcf49145f2bc2940d36128f4aff"
  IMAGE_NAME: "dharshanwebapp:latest"
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_TLS_CERTDIR: ""

before_script:
  - echo "Starting Pipeline üöÄ"

build_project:
  stage: build
  tags:
    - docker
  image: mcr.microsoft.com/dotnet/sdk:8.0
  script:
    - dotnet restore
    - dotnet build --configuration Release

test_project:
  stage: test
  tags:
    - docker
  image: mcr.microsoft.com/dotnet/sdk:8.0
  script:
    - dotnet test --no-restore --verbosity normal

sonar_scan:
  stage: sonar
  tags:
    - docker
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  script:
    - |
      sonar-scanner \
        -Dsonar.projectKey=dharshan-web \
        -Dsonar.sources=. \
        -Dsonar.cs.opencover.reportsPaths=coverage.opencover.xml \
        -Dsonar.host.url=$SONAR_HOST_URL \
        -Dsonar.login=$SONAR_TOKEN

docker_build:
  stage: docker
  tags:
    - docker
  image: docker:20.10.24
  services:
    - name: docker:20.10.24-dind
      alias: docker
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - echo "Building Docker image üê≥"
    - docker info
  script:
    - docker build -t $IMAGE_NAME .

deploy_container:
  stage: deploy
  tags:
    - docker
  image: docker:20.10.24
  services:
    - name: docker:20.10.24-dind
      alias: docker
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker info
  script:
    - docker rm -f dharshanapp || true
    - docker run -d --name dharshanapp -p 8080:80 $IMAGE_NAME
