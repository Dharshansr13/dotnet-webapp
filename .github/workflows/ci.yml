name: .NET CI with SonarQube and Docker

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build, Analyze, Tag & Push
    runs-on: ubuntu-latest

    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DOCKER_USERNAME: dharshansr

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Needed for git tags

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Install SonarScanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Begin SonarQube analysis
        run: dotnet sonarscanner begin /k:"dotnet-webapp" /d:sonar.host.url="http://13.233.132.196:9000" /d:sonar.login="${{ env.SONAR_TOKEN }}"
        
      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --no-restore

      - name: End SonarQube analysis
        run: dotnet sonarscanner end /d:sonar.login="${{ env.SONAR_TOKEN }}"

      - name: Log in to Docker Hub
        run: echo "${{ env.DOCKER_PASSWORD }}" | docker login -u "${{ env.DOCKER_USERNAME }}" --password-stdin

      - name: Get latest version tag
        id: get_version
        run: |
          git fetch --tags
          latest_tag=$(git tag --sort=-v:refname | grep '^v[0-9]*$' | head -n 1)
          if [ -z "$latest_tag" ]; then
            next_tag="v1"
          else
            next_number=$(echo $latest_tag | sed 's/v//')
            next_tag="v$((next_number + 1))"
          fi
          echo "Next tag: $next_tag"
          echo "tag=$next_tag" >> $GITHUB_OUTPUT

      - name: Create Git tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ steps.get_version.outputs.tag }}
          git push origin ${{ steps.get_version.outputs.tag }}

      - name: Build Docker image
        run: |
          docker build -t dharshansr/stylishboy:latest -t dharshansr/stylishboy:${{ steps.get_version.outputs.tag }} .

      - name: Push Docker images
        run: |
          docker push dharshansr/stylishboy:latest
          docker push dharshansr/stylishboy:${{ steps.get_version.outputs.tag }}
